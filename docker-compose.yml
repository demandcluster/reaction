# This docker-compose file is used to run the project's published image
#
# Usage: docker-compose up [-d]
#
# See comment in docker-compose.dev.yml if you want to run for development.

version: "3.4"

networks:
  reaction:
    external:
      name: reaction.localhost

services:
  api:
    networks:
      default:
      reaction:
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.demandjs-api.rule=Host(`api.demandcluster.com`)"
      - "traefik.http.routers.demandjs-api.tls=true"
      - "traefik.http.routers.demandjs-api.entrypoints=websecure"
      - "traefik.http.routers.demandjs-api.service=demandjs-api-service"
      - "traefik.http.services.demandjs-api-service.loadbalancer.server.port=3000"
      - "traefik.docker.network=proxy"

    image: reactioncommerce/reaction:3.11.1
    depends_on:
      - mongo
    env_file:
      - ./.env

  mongo:
    image: mongo:4.2.0
    command: mongod --oplogSize 128 --replSet rs0 --storageEngine=wiredTiger
    networks:
      default:
      reaction:
    ports:
      - "27017:27017"
    volumes:
      - mongo-db4:/data/db
    healthcheck: # re-run rs.initiate() after startup if it failed.
      test: test $$(echo "rs.status().ok || rs.initiate().ok" | mongo --quiet) -eq 1
      interval: 10s
      start_period: 30s

volumes:
  mongo-db4:
